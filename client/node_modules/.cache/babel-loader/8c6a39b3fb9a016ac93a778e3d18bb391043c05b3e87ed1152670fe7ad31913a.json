{"ast":null,"code":"var _jsxFileName = \"/Users/ednaomadjambe/eco-designs/client/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [formData, setFormdata] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const handleChange = e => {\n    setFormdata({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/api/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert('Form submitted successfully!');\n      } else {\n        alert('Failed to submit form!');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        value: formData.message,\n        onChange: handleChange,\n        rows: \"4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"dDBU6SFBbuv3sjcUSjNwfukwdc0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","formData","setFormdata","name","email","message","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","rows","_c","$RefreshReg$"],"sources":["/Users/ednaomadjambe/eco-designs/client/src/components/Form.js"],"sourcesContent":["import { React, useState} from 'react';\n\nimport '../style.css'\n\nfunction Form() {\n    const[formData, setFormdata] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n\n    const handleChange = (e) => {\n\n        setFormdata({ ...formData, [e.target.name] : e.target.value});\n\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n          const response = await fetch('http://localhost:3001/api/send-email', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n          });\n      \n          if (response.ok) {\n            alert('Form submitted successfully!');\n          } else {\n            alert('Failed to submit form!');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      };\n      \n\n    return (\n        <div className='form'>\n\n<form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        value={formData.name}\n        onChange={handleChange}\n        required\n      />\n\n      <label htmlFor=\"email\">Email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={handleChange}\n        required\n      />\n\n      <label htmlFor=\"message\">Message:</label>\n      <textarea\n        id=\"message\"\n        name=\"message\"\n        value={formData.message}\n        onChange={handleChange}\n        rows=\"4\"\n        required\n      ></textarea>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  \n        </div>\n    )\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}